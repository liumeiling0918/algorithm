//数组中的逆序对
public class Solution {
    public int MergeList(int[] a,int s1,int s2,int t){
        int count=0;
        int[] temp=new int[t-s1+1];
        //从尾部开始插入
        int i=s2-1;
        int j=t;
        int k=t-s1;
        while (i>=s1&&j>=s2){
            if (a[i]>a[j]){
                count=count+j-s2+1;
                temp[k]=a[i];
                i--;
                k--;
            }
            else {
                temp[k]=a[j];
                j--;
                k--;
            }
        }
        while(i>=s1){
            temp[k]=a[i];
            i--;
            k--;
        }
        while (j>=s2){
            temp[k]=a[j];
            j--;
            k--;
        }
        System.arraycopy(temp,0,a,s1,temp.length);
        return count;
    }
    public  int merge(int[] a,int gap){
        int count=0;
        int i;
        for (i=0;i+2*gap<=a.length;i=i+2*gap){
            count=count+MergeList(a,i,i+gap,i+gap*2-1);
        }
        if(i+gap<=a.length-1){
            count=count+MergeList(a,i,i+gap,a.length-1);
        }
        return count;
    }
    public int InversePairs(int [] array) {
        int count=0;
        if(array.length<=1) return 0;
        for (int gap=1;gap<array.length;gap=gap*2){
            count=count+merge(array,gap);
        }
        return count;

    }

}