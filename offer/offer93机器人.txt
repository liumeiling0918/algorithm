    public static int count=0;////方案数
    public static void main(String[] args) {


        System.out.println(movingCount(15,20,20));

    }
    public static int movingCount(int threshold, int rows, int cols)
    {
      int[][] visited=new int[rows][cols];
       count=0;
       helpCount(threshold,rows,cols,0,0,visited);
       return count;
    }

    public static void helpCount(int threshold, int rows, int cols,int x,int y,int[][] visited)
    {
           //判断当前格子是否合法
        if (x<rows&&x>=0&&y<cols&&y>=0&&canMove(x,y,threshold)&&visited[x][y]==0){
                count++;
                visited[x][y]=1;
            helpCount(threshold,rows,cols,x+1,y,visited);
            helpCount(threshold,rows,cols,x-1,y,visited);
            helpCount(threshold,rows,cols,x,y-1,visited);
            helpCount(threshold,rows,cols,x,y+1,visited);
        }

    }
    public static boolean canMove(int x,int y,int threshod){
        int sum=0;
        while (x!=0){
            sum+=x%10;
            x=x/10;
        }
        while (y!=0){
            sum+=y%10;
            y=y/10;
        }
        if (sum<=threshod) return true;
        else return false;
    }
